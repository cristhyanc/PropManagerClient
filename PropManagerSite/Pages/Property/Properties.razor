@page "/properties"
@inherits PropertiesBase

<div class="flex flex-row justify-between">
    <div class="font-bold">Properties</div>
    <SfButton @onclick="AddNewProperty" CssClass="e-info"> Add</SfButton>
</div>

@if (@IsBusy)
{
    <SfProgressBar Type="ProgressType.Circular" Value="20" Height="60" IsIndeterminate="true" Minimum="0" Maximum="100">
        <ProgressBarAnimation Enable="true"></ProgressBarAnimation>
    </SfProgressBar>
}
else
{
    <SfGrid class="mt-2" DataSource="@Properties">
        <GridColumns>
            <GridColumn Field=@nameof(IGetProperties_Properties.Id) HeaderText=" ID" IsPrimaryKey="true" Visible=false></GridColumn>
            <GridColumn Field=@nameof(IGetProperties_Properties.Name) HeaderText="Property Name"></GridColumn>
            <GridColumn Field=@nameof(IGetProperties_Properties.Address) HeaderText="Property Name"></GridColumn>
            <GridColumn Field=@nameof(IGetProperties_Properties.Rooms) HeaderText="Rooms" Format="C2"></GridColumn>
            <GridColumn Field=@nameof(IGetProperties_Properties.Bathrooms) HeaderText="Bathrooms"></GridColumn>
            <GridColumn HeaderText="Manage Records" Width="150">
                <Template>
                    @{
                        var value = (context as IGetProperties_Properties);
                        <SfButton @onclick="()=> EditProperty(value!)" CssClass="e-outline">Edit</SfButton>
                        <SfButton @onclick="()=> DeleteProperty(value!)" CssClass="e-outline">Delete</SfButton>
                    }
                </Template>
            </GridColumn>
        </GridColumns>
    </SfGrid>
}


